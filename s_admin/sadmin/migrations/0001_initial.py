# Generated by Django 5.1.2 on 2025-01-25 21:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('cs_code', models.AutoField(help_text='Code uniquely identify a table', primary_key=True, serialize=False, verbose_name='Code')),
                ('cs_name', models.CharField(help_text='Leval Name', max_length=100, verbose_name='Level Name')),
                ('cs_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the Level', max_length=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'ClassSubject',
                'ordering': ['cs_name'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('cu_num', models.AutoField(help_text='Code uniquely identify a Currecny', primary_key=True, serialize=False, verbose_name='Currecny ID')),
                ('cu_code', models.CharField(help_text='The currency Code', max_length=3, verbose_name='Code')),
                ('cu_name', models.CharField(help_text='Currency Name', max_length=100, verbose_name='Currency Name')),
                ('cu_base', models.CharField(choices=[('Y', 'Home Currency'), ('1', 'Currency 1'), ('2', 'Currency 1')], default='N', help_text='Indicates whether the currency is the base currency', max_length=1, verbose_name='Base Currency ?')),
                ('cu_rate', models.DecimalField(decimal_places=2, default=0, help_text='Rate to base', max_digits=15, verbose_name='Rate to base')),
                ('cu_valid_from', models.DateTimeField(help_text='Date date from which rate is valid', verbose_name='Valid From')),
                ('cu_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the currency', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Currency',
                'ordering': ['cu_code'],
            },
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('dp_code', models.CharField(help_text='Code uniquely identify a department', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('dp_name', models.CharField(help_text='The name of department', max_length=50, verbose_name='name')),
                ('dp_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the department', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Department',
                'ordering': ['dp_code'],
            },
        ),
        migrations.CreateModel(
            name='ExcludedDay',
            fields=[
                ('ex_code', models.CharField(help_text='Code uniquely identify a Excluded Days', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('ex_name', models.CharField(help_text='The name of Excluded day/Holiday', max_length=50, verbose_name='Name')),
                ('ex_date', models.DateTimeField(help_text='The date of the excluded Holiday/Date', verbose_name='Date')),
                ('ex_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the exclusion', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'excludedday',
                'ordering': ['ex_date'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('fc_num', models.AutoField(help_text='Code uniquely identify a facility', primary_key=True, serialize=False, verbose_name='Currency ID')),
                ('fc_code', models.CharField(help_text='The facility Code', max_length=10, verbose_name='Code')),
                ('fc_name', models.CharField(help_text='The facility s Name', max_length=100, verbose_name='Name')),
                ('fc_desc', models.CharField(help_text='The facility s Description', max_length=100, verbose_name='Description')),
                ('fc_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the facility', max_length=1, verbose_name='Status')),
                ('fc_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Residential'), ('3', 'Other')], default='1', help_text='Type of the facility', max_length=1, verbose_name='Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Facility',
                'ordering': ['fc_code'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('lv_code', models.CharField(help_text='The Level Code - Primary key for the table', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('lv_name', models.CharField(help_text='Leval Name', max_length=100, verbose_name='Level Name')),
                ('lv_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the Level', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Level',
                'ordering': ['lv_code'],
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('ct_code', models.CharField(help_text='Enter code uniquely identifying post category', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('ct_desc', models.CharField(blank=True, help_text='The description of the category', max_length=50, null=True)),
                ('ct_seo_title', models.CharField(blank=True, help_text='The SEO title of the blog', max_length=300, null=True, verbose_name='SEO Title')),
                ('ct_seo_desc', models.CharField(blank=True, help_text='The SEO description of the blog', max_length=250, null=True, verbose_name='SEO Description')),
                ('slug', models.SlugField(blank=True, help_text='The slug field for the blog for user facing title', max_length=250, unique=True)),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Blog Category',
                'ordering': ['ct_desc'],
            },
        ),
        migrations.CreateModel(
            name='PostOrigin',
            fields=[
                ('po_num', models.CharField(help_text='Enter code uniquely identifying originator of the post', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('po_name', models.CharField(blank=True, help_text='The name of the originator', max_length=100, null=True)),
                ('po_position', models.CharField(blank=True, help_text='The position/title of the originator', max_length=50, null=True)),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'PostOrigin',
                'ordering': ['po_name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolLevel',
            fields=[
                ('sl_code', models.CharField(help_text='Code uniquely identify a school level', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('sl_name', models.CharField(help_text='The name of school level', max_length=10, verbose_name='name')),
                ('sl_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the school level', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'SchoolLevel',
                'ordering': ['sl_code'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('sb_code', models.CharField(help_text='User assigned code for the Subject', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('sb_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('sb_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Name')),
                ('sb_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Required hrs for Subject', max_digits=10, null=True, verbose_name='Req. Hrs')),
                ('sb_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Subject',
                'ordering': ['sb_code'],
            },
        ),
        migrations.CreateModel(
            name='TermParameter',
            fields=[
                ('tp_num', models.AutoField(help_text='System generated number uniquely identifying a Level Class', primary_key=True, serialize=False, verbose_name='Number')),
                ('tp_year', models.CharField(help_text='Study Year', max_length=4, verbose_name='Year')),
                ('tp_term', models.IntegerField(help_text='The term of the year of study', verbose_name='Term')),
                ('tp_weeks', models.IntegerField(blank=True, default=0, help_text='Weeks in term', null=True, verbose_name='Weeks')),
                ('tp_period_len', models.IntegerField(blank=True, default=30, help_text='Length of period in minutes', null=True, verbose_name='Period Length')),
                ('tp_days', models.IntegerField(blank=True, default=0, help_text='Days in term', null=True, verbose_name='Days')),
                ('tp_seats', models.IntegerField(blank=True, help_text='General number of seats per class', null=True, verbose_name='General Seats')),
                ('tp_cycledays', models.IntegerField(blank=True, default=5, help_text='Days in Cycle', null=True, verbose_name=' Cycle Days')),
                ('tp_start_date', models.DateTimeField(blank=True, help_text='Opening Day', null=True, verbose_name='Start Date')),
                ('tp_end_date', models.DateTimeField(blank=True, help_text='Closng Day', null=True, verbose_name='End Date')),
                ('tp_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('tp_schemed', models.CharField(choices=[('0', 'Inactive'), ('1', 'Scheduled'), ('2', 'Processed')], default='0', help_text='Schemed', max_length=1, verbose_name='Schemed?')),
                ('tp_billed', models.CharField(choices=[('N', 'No'), ('Y', 'Yes')], default='N', help_text='Billed', max_length=1, verbose_name='Billed ?')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Term',
                'ordering': ['tp_year', 'tp_term'],
            },
        ),
        migrations.CreateModel(
            name='FacilitySpace',
            fields=[
                ('fs_num', models.AutoField(help_text='System generated number uniquely identifying a FacilitySpace', primary_key=True, serialize=False, verbose_name='Number')),
                ('fs_desc', models.CharField(help_text='The description of the space', max_length=100, verbose_name='Name')),
                ('fs_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('fs_fc_num', models.ForeignKey(help_text='Foreign key to Facility', on_delete=django.db.models.deletion.CASCADE, to='sadmin.facility', verbose_name='Facility')),
            ],
            options={
                'verbose_name': 'Facility Space',
                'ordering': ['fs_num'],
            },
        ),
        migrations.CreateModel(
            name='ClassMember',
            fields=[
                ('cm_num', models.AutoField(help_text='System generated number uniquely identifying a Class Member', primary_key=True, serialize=False, verbose_name='Number')),
                ('cm_year', models.CharField(blank=True, help_text='Study Year', max_length=4, null=True, verbose_name='Year')),
                ('cm_surname', models.CharField(help_text='Class Member Surname', max_length=100, verbose_name='Surname')),
                ('cm_fname', models.CharField(help_text='Class Member First Name', max_length=100, verbose_name='First Name')),
                ('cm_othername', models.CharField(help_text='Class Member s Other Name', max_length=100, verbose_name='Other Name')),
                ('cm_guardian', models.CharField(help_text='Class Member s Guardian', max_length=100, verbose_name='Guardian')),
                ('cm_phone', models.CharField(blank=True, help_text='Contact phone', max_length=100, null=True, verbose_name='Phone')),
                ('cm_email', models.CharField(blank=True, help_text='Contact Email', max_length=100, null=True, verbose_name='Email')),
                ('cm_dob', models.DateTimeField(blank=True, help_text='Date of birth', null=True, verbose_name='Date Of Birth')),
                ('cm_gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], default='F', help_text='Gender', max_length=1, verbose_name='Gender')),
                ('cm_doj', models.DateTimeField(blank=True, help_text='Date Joined', null=True, verbose_name='Date joined')),
                ('cm_dol', models.DateTimeField(blank=True, help_text='Date of leaving', null=True, verbose_name='Date of Leaving')),
                ('cm_status', models.CharField(choices=[('1', 'On'), ('2', 'Suspended'), ('3', 'Expelled')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('cm_app_status', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('cm_lv_code', models.ForeignKey(help_text='Foreign key to Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
            ],
            options={
                'verbose_name': 'Class Member',
                'ordering': ['cm_surname'],
            },
        ),
        migrations.CreateModel(
            name='LevelClass',
            fields=[
                ('lc_num', models.AutoField(help_text='System generated number uniquely identifying a Level Class', primary_key=True, serialize=False, verbose_name='Number')),
                ('lc_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('lc_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Name')),
                ('lc_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Required hrs for Subject', max_digits=10, null=True, verbose_name='Req. Hrs')),
                ('lc_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('lc_scheme_status', models.CharField(choices=[('N', 'No'), ('Y', 'Yes')], default='N', help_text='Indicates whether a scheme has been generated', max_length=1, verbose_name='Scheme Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('lc_lv_code', models.ForeignKey(help_text='Foreign key to Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
            ],
            options={
                'verbose_name': 'Level Class',
                'ordering': ['lc_num'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('bp_num', models.AutoField(help_text='Number uniquely identifying the post', primary_key=True, serialize=False, verbose_name='Post Number')),
                ('bp_heading', models.CharField(help_text='The heading of the post', max_length=100, verbose_name='Heading')),
                ('bp_seo_title', models.CharField(blank=True, help_text='The SEO title of the blog', max_length=300, null=True, verbose_name='SEO Title')),
                ('bp_seo_desc', models.CharField(blank=True, help_text='The SEO description of the blog', max_length=250, null=True, verbose_name='SEO Description')),
                ('slug', models.SlugField(blank=True, help_text='The slug field for the blog for user facing title', max_length=250, unique=True)),
                ('bp_date', models.DateTimeField(auto_now_add=True, help_text='Date on which this post was created')),
                ('bp_body', models.TextField(help_text='The post s message', max_length=350, verbose_name='Message')),
                ('bp_status', models.CharField(choices=[('D', 'Draft'), ('R', 'Peered'), ('P', 'Publish')], default='D', help_text='Enter the status of the post', max_length=1, verbose_name='Status')),
                ('bp_file', models.FileField(blank=True, help_text='Choose File to upload', null=True, upload_to='media/', verbose_name='Attachment File')),
                ('bp_image', models.ImageField(blank=True, help_text='Choose image to upload', null=True, upload_to='media/', verbose_name='Image')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('bp_ct_code', models.ForeignKey(help_text='Category into which this post falls', on_delete=django.db.models.deletion.CASCADE, to='sadmin.postcategory', verbose_name='Category')),
                ('bp_po_num', models.ForeignKey(help_text='The originator of the post', on_delete=django.db.models.deletion.CASCADE, to='sadmin.postorigin', verbose_name='Originator')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'ordering': ['bp_date'],
            },
        ),
        migrations.CreateModel(
            name='PostContribution',
            fields=[
                ('pc_num', models.AutoField(help_text='Number uniquely identifying the contribution', primary_key=True, serialize=False, verbose_name='Contribution Number')),
                ('pc_contribution', models.TextField(help_text='The contribution to a post', max_length=350, verbose_name='Contribution')),
                ('pc_email', models.EmailField(blank=True, help_text='The contributor s email', max_length=254, null=True, verbose_name='Email')),
                ('pc_contributor', models.CharField(blank=True, help_text='The name of the contributor', max_length=50, null=True, verbose_name='Contributor')),
                ('pc_active', models.BooleanField(default=False, help_text='Indicates whether contribution is accepted or not', verbose_name='Accepted')),
                ('ad_user_c', models.CharField(blank=True, help_text='The Creating record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('pc_bp_num', models.ForeignKey(db_column='pc_bp_num', help_text='The Reference post for this contribution', on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='sadmin.blogpost', verbose_name='BlogPost')),
            ],
            options={
                'verbose_name': 'Contribution',
                'ordering': ['ad_date_c'],
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('sc_code', models.CharField(help_text='User assigned code for the Class Level', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('sc_seats', models.IntegerField(default=30, help_text='Seats Available in Class', verbose_name='Seats')),
                ('sc_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the School Class', max_length=1, verbose_name='Type')),
                ('sc_desc', models.CharField(help_text='The description of the School Class', max_length=100, verbose_name='Name')),
                ('sc_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sc_lv_code', models.ForeignKey(blank=True, help_text='Foreign key to Level', null=True, on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('sc_sl_code', models.ForeignKey(blank=True, help_text='Foreign key to School Level', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sc_sl_code', to='sadmin.schoollevel', verbose_name='School Level')),
            ],
            options={
                'verbose_name': 'School Class',
                'ordering': ['sc_code'],
            },
        ),
        migrations.CreateModel(
            name='Schemes',
            fields=[
                ('ch_num', models.AutoField(help_text='Unique identifier for the scheme', primary_key=True, serialize=False, verbose_name='Number')),
                ('ch_ex_board', models.CharField(choices=[('1', 'Zim Sec'), ('2', 'Cambridge')], default='1', help_text='Examination Board', max_length=1, verbose_name='Exam Board')),
                ('ch_year', models.CharField(help_text='Study Year', max_length=4, verbose_name='Year')),
                ('ch_term', models.IntegerField(help_text='The term of the year of study', verbose_name='Term')),
                ('ch_week', models.IntegerField(blank=True, help_text='Week covered', null=True, verbose_name='Week')),
                ('ch_type', models.CharField(blank=True, choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, null=True, verbose_name='Type')),
                ('ch_topic', models.CharField(blank=True, help_text='The Topic covered', max_length=100, null=True, verbose_name='Topic')),
                ('ch_references', models.CharField(blank=True, help_text='The sources of materials', max_length=100, null=True, verbose_name='Sources')),
                ('ch_objectives', models.CharField(blank=True, help_text='The objectives for the period', max_length=100, null=True, verbose_name='Objetives')),
                ('ch_competencies', models.CharField(blank=True, help_text='The competencies to be acquired', max_length=100, null=True, verbose_name='Competencies')),
                ('ch_methods', models.CharField(blank=True, help_text='The methods to be used', max_length=100, null=True, verbose_name='Methods')),
                ('ch_evaluation', models.CharField(blank=True, help_text='The Evaluation', max_length=100, null=True, verbose_name='Evaluation')),
                ('ch_review1', models.CharField(help_text='The first reviewer', max_length=100, verbose_name='Review1')),
                ('ch_review2', models.CharField(blank=True, help_text='The second reviewer', max_length=100, null=True, verbose_name='Review2')),
                ('ch_eff_date', models.DateTimeField(blank=True, help_text='Effetive Date', null=True, verbose_name='Effetive Date')),
                ('ch_status', models.CharField(choices=[('0', 'New'), ('1', 'Done'), ('2', 'Pending'), ('3', 'Cancelled')], default='0', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ch_cs_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.classsubject', verbose_name='School Class')),
                ('ch_lc_num', models.ForeignKey(help_text='Level Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.levelclass', verbose_name='Level Class')),
                ('ch_lv_code', models.ForeignKey(help_text='The Study Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('ch_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'Schemes',
                'ordering': ['ch_num'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('rc_num', models.AutoField(help_text='System generated number uniquely identifying a receipt', primary_key=True, serialize=False, verbose_name='Number')),
                ('rc_mr_num', models.CharField(default='0', help_text='The member transaction to which funds to be applied', max_length=20, verbose_name='Member Record')),
                ('rc_year', models.IntegerField(blank=True, help_text='Year for which the fees are considered', null=True, verbose_name='Year')),
                ('rc_term', models.IntegerField(blank=True, help_text='Term for which the fees are considered', null=True, verbose_name='Period')),
                ('rc_period', models.IntegerField(blank=True, help_text='Period in which transaction occurred', null=True, verbose_name='Period')),
                ('rc_trans_date', models.DateTimeField(blank=True, help_text='Transaction Date', null=True, verbose_name='Transaction Date')),
                ('rc_value_date', models.DateTimeField(blank=True, help_text='Transaction s value date', null=True, verbose_name='Value Date')),
                ('rc_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('rc_pamount', models.DecimalField(decimal_places=2, default=0, help_text='The projected trans amount', max_digits=15, verbose_name='Projected Amount')),
                ('rc_aamount', models.DecimalField(decimal_places=2, default=0, help_text='The actual transaction amount', max_digits=15, verbose_name='Actual Amount')),
                ('rc_balance', models.DecimalField(decimal_places=2, default=0, help_text='The balance on the advance', max_digits=15, verbose_name='Balance')),
                ('rc_pay_ref', models.CharField(blank=True, help_text='The payment reference', max_length=20, null=True, verbose_name='Payment Ref')),
                ('rc_dr_cr', models.CharField(default='D', help_text='The Transaction is a debit or a credit', max_length=1, verbose_name='Debit/Credit')),
                ('rc_paid', models.CharField(default='N', help_text='Indicates payment in settlement for this transaction', max_length=1, verbose_name='Paid')),
                ('rc_status', models.CharField(choices=[('1', 'Live'), ('2', 'Reversed'), ('3', 'Cancelled')], default='1', help_text='Status of the transaction', max_length=1, verbose_name='Status')),
                ('rc_processed', models.CharField(choices=[('1', 'Pending'), ('2', 'Processed')], default='1', help_text='Processed ?', max_length=1, verbose_name='Processed')),
                ('rc_pay_type', models.CharField(choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], default='3', help_text='Payment type', max_length=1, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('rc_cm_num', models.ForeignKey(blank=True, help_text='Learner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rc_cm', to='sadmin.classmember', verbose_name='Member')),
                ('rc_lv_code', models.ForeignKey(blank=True, help_text='The study Level', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mr_rc', to='sadmin.level', verbose_name='Level')),
                ('rc_sc_code', models.ForeignKey(blank=True, help_text='The Class', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rc_sc', to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'Receipt',
                'ordering': ['rc_num'],
            },
        ),
        migrations.CreateModel(
            name='MemberRegister',
            fields=[
                ('mr_num', models.AutoField(help_text='System generated number uniquely identifying a register record', primary_key=True, serialize=False, verbose_name='Number')),
                ('mr_year', models.CharField(help_text='Study Year', max_length=4, verbose_name='Year')),
                ('mr_term', models.IntegerField(help_text='The term of the year of study', verbose_name='Term')),
                ('mr_comment', models.CharField(help_text='Class Member s Other Name', max_length=100, verbose_name='Other Name')),
                ('mr_date', models.DateTimeField(help_text='The date of attendance', verbose_name='Date')),
                ('mr_day', models.IntegerField(help_text='The day number', verbose_name='Day Number')),
                ('mr_mark', models.CharField(choices=[('P', 'Present'), ('S', 'Sick'), ('A', 'Absent'), ('H', 'Holiday')], default='P', help_text='Marked Indicator', max_length=1, verbose_name='Marked')),
                ('mr_status', models.CharField(choices=[('N', 'Normal'), ('W', 'Weekend'), ('H', 'Holiday')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('mr_cm_num', models.ForeignKey(help_text='The Student', on_delete=django.db.models.deletion.CASCADE, to='sadmin.classmember', verbose_name='Student')),
                ('mr_sc_code', models.ForeignKey(help_text='Foreign key to SchoolClass', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'Member Register',
                'ordering': ['mr_cm_num'],
            },
        ),
        migrations.AddField(
            model_name='levelclass',
            name='lc_sc_code',
            field=models.ForeignKey(help_text='Foreign key to SchoolClass', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='cs_sc_code',
            field=models.ForeignKey(blank=True, help_text='The school School Class', null=True, on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class'),
        ),
        migrations.AddField(
            model_name='classmember',
            name='cm_sc_code',
            field=models.ForeignKey(help_text='Foreign key to SchoolClass', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class'),
        ),
        migrations.CreateModel(
            name='ClassBilling',
            fields=[
                ('cb_num', models.AutoField(help_text='System generated number uniquely identifying a Level Class', primary_key=True, serialize=False, verbose_name='Number')),
                ('cb_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular'), ('4', 'Practical')], default='1', help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('cb_desc', models.CharField(help_text='The description of the Rate', max_length=100, verbose_name='Name')),
                ('cb_rate', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Rate', max_digits=10, null=True, verbose_name='Rate')),
                ('cb_year', models.CharField(blank=True, help_text='Study Year', max_length=4, null=True, verbose_name='Year')),
                ('cb_term', models.IntegerField(blank=True, help_text='The term of the year of study', null=True, verbose_name='Term')),
                ('cb_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('cb_lv_code', models.ForeignKey(blank=True, help_text='Foreign key to Level', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cb_lv', to='sadmin.level', verbose_name='Level')),
                ('cb_sc_code', models.ForeignKey(blank=True, help_text='Foreign key to SchoolClass', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cb_sc', to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'ClassBilling',
                'ordering': ['cb_num'],
            },
        ),
        migrations.CreateModel(
            name='ClassAssessment',
            fields=[
                ('as_num', models.AutoField(help_text='System generated number uniquely identifying an Assessment', primary_key=True, serialize=False, verbose_name='Number')),
                ('as_type', models.CharField(choices=[('1', 'Homework'), ('2', 'Tests'), ('3', 'End Of Session Exam')], help_text='Type of the assessment', max_length=1, verbose_name='Type')),
                ('as_name', models.CharField(help_text='Name of the assessment', max_length=100, verbose_name='Name')),
                ('as_remark', models.CharField(help_text='Any remarks', max_length=100, verbose_name='Remark')),
                ('as_exception', models.CharField(help_text='Exceptions noted', max_length=100, verbose_name='Exceptions')),
                ('as_comment', models.CharField(help_text='Any comments', max_length=100, verbose_name='Comment')),
                ('as_review', models.CharField(help_text='Review of the assessment', max_length=100, verbose_name='Review')),
                ('as_resources', models.CharField(help_text='Resource requirements', max_length=100, verbose_name='Resources')),
                ('as_trans_date', models.DateTimeField(help_text='Date to be taken', verbose_name='Trans Date')),
                ('as_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('as_lc_num', models.ForeignKey(help_text='The Level Class', on_delete=django.db.models.deletion.CASCADE, related_name='level_key', to='sadmin.levelclass', verbose_name='Level Class')),
                ('as_ch_num', models.ForeignKey(blank=True, help_text='Foreign key to Schemes', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ch_key', to='sadmin.schemes', verbose_name='Scheme')),
                ('as_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, related_name='sc_key', to='sadmin.schoolclass', verbose_name='School Class')),
                ('as_sb_code', models.ForeignKey(help_text='Foreign key to Subject', on_delete=django.db.models.deletion.CASCADE, related_name='sb_key', to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Class Assessment',
                'ordering': ['as_num'],
            },
        ),
        migrations.AddField(
            model_name='level',
            name='lv_sl_code',
            field=models.ForeignKey(help_text='The school level', on_delete=django.db.models.deletion.CASCADE, related_name='lv_sl_code', to='sadmin.schoollevel', verbose_name='School Level'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='cs_sl_code',
            field=models.ForeignKey(help_text='The school level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoollevel', verbose_name='School Level'),
        ),
        migrations.CreateModel(
            name='SpaceSlot',
            fields=[
                ('sp_num', models.AutoField(help_text='System generated number uniquely identifying a Level Class', primary_key=True, serialize=False, verbose_name='Number')),
                ('sp_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('sp_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Name')),
                ('sp_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Duration of the slot', max_digits=10, null=True, verbose_name='Duration')),
                ('sp_fromtime', models.DateTimeField(blank=True, help_text='Required hrs for Subject', null=True, verbose_name='From Time')),
                ('sp_totime', models.DateTimeField(blank=True, help_text='Required hrs for Subject', null=True, verbose_name='To Time')),
                ('sp_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sp_fs_num', models.ForeignKey(help_text='Foreign key to Facility', on_delete=django.db.models.deletion.CASCADE, to='sadmin.facilityspace', verbose_name='Facility')),
            ],
            options={
                'verbose_name': 'Space Slot',
                'ordering': ['sp_num'],
            },
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('sf_num', models.AutoField(help_text='Code uniquely identify a Staff Member', primary_key=True, serialize=False, verbose_name='Member ID')),
                ('sf_surname', models.CharField(help_text='Staff Member Surname', max_length=100, verbose_name='Surame')),
                ('sf_fname', models.CharField(help_text='Staff Member First Name', max_length=100, verbose_name='First Name')),
                ('sf_othername', models.CharField(help_text='Staff Member s Other Name', max_length=100, verbose_name='Other Name')),
                ('sf_nok', models.CharField(help_text='Staff Member s next of kin', max_length=100, verbose_name='Next Of Kin')),
                ('sf_phone', models.CharField(help_text='Contact phone', max_length=100, verbose_name='Phone')),
                ('sf_email', models.CharField(help_text='Contact Email', max_length=100, verbose_name='Email')),
                ('sf_dob', models.DateTimeField(help_text='Date of birth', verbose_name='Date Of Birth')),
                ('sf_doj', models.DateTimeField(help_text='Date Joined', verbose_name='Date joined')),
                ('sf_dol', models.DateTimeField(help_text='Date of leaving', verbose_name='Date of Leaving')),
                ('sf_status', models.CharField(choices=[('1', 'Applicant'), ('2', 'Engaged'), ('3', 'Discharged'), ('4', 'Pending'), ('5', 'On Leave')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('sf_gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], default='1', help_text='Gender', max_length=1, verbose_name='Gender')),
                ('sf_app_status', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], default='1', help_text='Indicates Tyoe e.g. Academic', max_length=1, verbose_name='Staff Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sf_dp_code', models.ForeignKey(help_text='Staff member s department', on_delete=django.db.models.deletion.CASCADE, to='sadmin.dept', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Staff Member',
                'ordering': ['sf_surname'],
            },
        ),
        migrations.AddField(
            model_name='schoolclass',
            name='sc_sf_num',
            field=models.ForeignKey(blank=True, help_text='Staff member assigned', null=True, on_delete=django.db.models.deletion.CASCADE, to='sadmin.staffmember', verbose_name='Staff Member'),
        ),
        migrations.AddField(
            model_name='schemes',
            name='ch_sf_num',
            field=models.ForeignKey(help_text='Staff member assigned', on_delete=django.db.models.deletion.CASCADE, to='sadmin.staffmember', verbose_name='Staff Member'),
        ),
        migrations.AddField(
            model_name='levelclass',
            name='lc_sf_num',
            field=models.ForeignKey(help_text='Staff member assigned', on_delete=django.db.models.deletion.CASCADE, to='sadmin.staffmember', verbose_name='Staff Member'),
        ),
        migrations.CreateModel(
            name='StaffSubject',
            fields=[
                ('ss_num', models.AutoField(help_text='Code uniquely identify a record', primary_key=True, serialize=False, verbose_name='Number')),
                ('ss_status', models.CharField(choices=[('1', 'Active'), ('0', 'Inactive')], default='1', help_text='Status of the currency', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ss_lv_code', models.ForeignKey(help_text='Teaches up to level ?', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Up to Level')),
                ('ss_sf_num', models.ForeignKey(help_text='Staff Member', on_delete=django.db.models.deletion.CASCADE, to='sadmin.staffmember', verbose_name='Staff Member')),
                ('ss_sb_code', models.ForeignKey(help_text='Foreign key to Subject', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Staff Subject',
                'ordering': ['ss_sb_code'],
            },
        ),
        migrations.AddField(
            model_name='schemes',
            name='ch_sb_code',
            field=models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject'),
        ),
        migrations.CreateModel(
            name='LevelClassInstance',
            fields=[
                ('ci_num', models.AutoField(help_text='System generated number uniquely identifying a Class Instance', primary_key=True, serialize=False, verbose_name='Number')),
                ('ci_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('ci_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Name')),
                ('ci_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Required hrs for Subject', max_digits=10, null=True, verbose_name='Req. Hrs')),
                ('ci_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ci_lc_num', models.ForeignKey(help_text='The Level Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.levelclass', verbose_name='Level Class')),
                ('ci_lv_code', models.ForeignKey(help_text='Foreign key to Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('ci_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
                ('ci_sb_code', models.ForeignKey(help_text='Foreign key to Subject', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Level Class Instance',
                'ordering': ['ci_num'],
            },
        ),
        migrations.AddField(
            model_name='levelclass',
            name='lc_sb_code',
            field=models.ForeignKey(help_text='Foreign key to Subject', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='level',
            name='lv_sb_code',
            field=models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject'),
        ),
        migrations.CreateModel(
            name='LearnerAssessment',
            fields=[
                ('la_num', models.AutoField(help_text='Unique identifier for a Learner Assessment', primary_key=True, serialize=False, verbose_name='Number')),
                ('la_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular')], help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('la_remark', models.CharField(help_text='The remark on the Learner Assessment', max_length=100, verbose_name='Remark')),
                ('la_comment', models.CharField(help_text='Comment on the Learner Assessment', max_length=100, verbose_name='Comment')),
                ('la_mark_f', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Forecasted mark', max_digits=5, null=True, verbose_name='Forcast Mark')),
                ('la_grade_f', models.CharField(help_text='Forcast grade', max_length=5, verbose_name='Forcast Grade')),
                ('la_mark_a', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Actual mark', max_digits=5, null=True, verbose_name='Actual Mark')),
                ('la_grade_a', models.CharField(help_text='Actual grade', max_length=5, verbose_name='Actual Grade')),
                ('la_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('la_as_num', models.ForeignKey(help_text='Student s assessment', on_delete=django.db.models.deletion.CASCADE, related_name='la_as_num', to='sadmin.classassessment', verbose_name='Assessment')),
                ('la_cm_num', models.ForeignKey(help_text='The Student', on_delete=django.db.models.deletion.CASCADE, related_name='la_cm_key', to='sadmin.classmember', verbose_name='Student')),
                ('la_lc_num', models.ForeignKey(help_text='The Level Class', on_delete=django.db.models.deletion.CASCADE, related_name='la_lc_key', to='sadmin.levelclass', verbose_name='Level Class')),
                ('la_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, related_name='la_sc_key', to='sadmin.schoolclass', verbose_name='School Class')),
                ('la_sb_code', models.ForeignKey(blank=True, default=1, help_text='Subject of study', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='la_sb_key', to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Learner Assessment',
                'ordering': ['la_num'],
            },
        ),
        migrations.CreateModel(
            name='DailyPlan',
            fields=[
                ('sp_num', models.AutoField(help_text='Unique identifier for the daily plan', primary_key=True, serialize=False, verbose_name='Number')),
                ('sp_year', models.CharField(help_text='Study Year', max_length=4, verbose_name='Year')),
                ('sp_term', models.IntegerField(help_text='The term of the year of study', verbose_name='Term')),
                ('sp_cycle', models.IntegerField(blank=True, help_text='Cycle of the session', null=True, verbose_name='Cycle')),
                ('sp_day', models.IntegerField(blank=True, help_text='Day of the session', null=True, verbose_name='day')),
                ('sp_start_time', models.TimeField(blank=True, help_text='Starting Time', null=True, verbose_name='Start Time')),
                ('sp_finish_time', models.TimeField(blank=True, help_text='Finishing Time', null=True, verbose_name='Finish Time')),
                ('sp_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Duration', max_digits=10, null=True, verbose_name='Req. Hrs')),
                ('sp_area', models.CharField(blank=True, choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, null=True, verbose_name='Type')),
                ('sp_topic', models.CharField(blank=True, help_text='The Topic covered', max_length=100, null=True, verbose_name='Topic')),
                ('sp_objective', models.CharField(blank=True, help_text='The objectives for the period', max_length=100, null=True, verbose_name='Objetives')),
                ('sp_absorption', models.CharField(blank=True, help_text='The methods to be used', max_length=100, null=True, verbose_name='Methods')),
                ('sp_paction', models.IntegerField(blank=True, choices=[(80, 'more than 80 %'), (75, '75 %'), (50, '50 %'), (25, 'Less than 25 %')], help_text='Follow on action post delivery', null=True, verbose_name='Post Action')),
                ('sp_top', models.CharField(blank=True, help_text='Upper Group Members', max_length=100, null=True, verbose_name='Top Group')),
                ('sp_middle', models.CharField(blank=True, help_text='Normal Group Members', max_length=100, null=True, verbose_name='Normal Group')),
                ('sp_lower', models.CharField(blank=True, help_text='Lower Group Members', max_length=100, null=True, verbose_name='Lower Group')),
                ('sp_del_date', models.DateTimeField(blank=True, help_text='Date of execution of lesson', null=True, verbose_name='Delivery Date')),
                ('sp_plan_date', models.DateTimeField(blank=True, help_text='Planned date of execution of lesson', null=True, verbose_name='Planned Date')),
                ('sp_status', models.CharField(choices=[('0', 'Planned'), ('1', 'Delivered'), ('2', 'Deferred'), ('W', 'Weekend'), ('W', 'Holiday')], default='0', help_text='Status', max_length=1, verbose_name='Status')),
                ('sp_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], default='1', help_text='Type', max_length=1, verbose_name='Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sp_lc_num', models.ForeignKey(help_text='Level Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.levelclass', verbose_name='Level Class')),
                ('sp_ch_num', models.ForeignKey(help_text='Scheme Plan', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schemes', verbose_name='Scheme')),
                ('sp_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
                ('sp_sb_code', models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'DailyPlan',
                'ordering': ['sp_num'],
            },
        ),
        migrations.AddField(
            model_name='classsubject',
            name='cs_sb_code',
            field=models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject'),
        ),
        migrations.CreateModel(
            name='SubjectBilling',
            fields=[
                ('jb_num', models.AutoField(help_text='System generated number uniquely identifying a Level Class', primary_key=True, serialize=False, verbose_name='Number')),
                ('jb_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Carricular'), ('4', 'Practical')], default='1', help_text='Type of the Subject', max_length=1, verbose_name='Type')),
                ('jb_desc', models.CharField(help_text='The description of the billing head', max_length=100, verbose_name='Name')),
                ('jb_rate', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Rate', max_digits=10, null=True, verbose_name='Rate')),
                ('jb_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('jb_year', models.CharField(blank=True, help_text='Study Year', max_length=4, null=True, verbose_name='Year')),
                ('jb_term', models.IntegerField(blank=True, help_text='The term of the year of study', null=True, verbose_name='Term')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('jb_lc_num', models.ForeignKey(blank=True, help_text='Foreign key to Level Class', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jb_lc', to='sadmin.levelclass', verbose_name='Level Class')),
                ('jb_lv_code', models.ForeignKey(blank=True, help_text='Foreign key to Level', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jb_lv', to='sadmin.level', verbose_name='Level')),
                ('jb_sb_code', models.ForeignKey(blank=True, help_text='Foreign key to Subject', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jb_sb', to='sadmin.subject', verbose_name='Subject')),
                ('jb_sc_code', models.ForeignKey(blank=True, help_text='Foreign key to SchoolClass', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jb_sc', to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'SubjectBilling',
                'ordering': ['jb_num'],
            },
        ),
        migrations.CreateModel(
            name='MemberRecord',
            fields=[
                ('mr_num', models.AutoField(help_text='System generated number uniquely identifying a group member transaction', primary_key=True, serialize=False, verbose_name='Number')),
                ('mr_year', models.IntegerField(help_text='Year for which the fees are considered', verbose_name='Period')),
                ('mr_term', models.IntegerField(help_text='Term for which the fees are considered', verbose_name='Term')),
                ('mr_trans_date', models.DateTimeField(help_text='Transaction Date', verbose_name='Transaction Date')),
                ('mr_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('mr_pamount', models.DecimalField(decimal_places=2, default=0, help_text='The amount', max_digits=15, verbose_name='Projected Amount')),
                ('mr_aamount', models.DecimalField(decimal_places=2, default=0, help_text='The actual transaction amount', max_digits=15, verbose_name='Actual Amount')),
                ('mr_pay_ref', models.CharField(blank=True, help_text='The payment reference', max_length=20, null=True, verbose_name='Payment Ref')),
                ('mr_category', models.CharField(choices=[('1', 'Contributions'), ('2', 'Advances'), ('3', 'Interest'), ('4', 'Penalties'), ('G', 'General')], default='1', help_text='Category of the transaction', max_length=1, verbose_name='Category')),
                ('mr_dr_cr', models.CharField(default='D', help_text='The Transaction is a debit or a credit', max_length=1, verbose_name='Debit/Credit')),
                ('mr_paid', models.CharField(default='N', help_text='Indicates payment in settlement for this transaction', max_length=1, verbose_name='Paid')),
                ('mr_status', models.CharField(choices=[('1', 'Live'), ('2', 'Reversed'), ('3', 'Cancelled')], default='1', help_text='Status of the transaction', max_length=1, verbose_name='Status')),
                ('mr_processed', models.CharField(default='N', help_text='Indicates transaction has been processed', max_length=1, verbose_name='Processed')),
                ('mr_pay_type', models.CharField(blank=True, choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], default='N', help_text='Payment type', max_length=1, null=True, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created', null=True)),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended', null=True)),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('mr_cb_num', models.ForeignKey(blank=True, help_text='Name of the class based fee ', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mr_lv', to='sadmin.classbilling', verbose_name='Billing Head')),
                ('mr_cm_num', models.ForeignKey(help_text='Learner', on_delete=django.db.models.deletion.CASCADE, related_name='mr_cm', to='sadmin.classmember', verbose_name='Member')),
                ('mr_lv_code', models.ForeignKey(help_text='The study Level', on_delete=django.db.models.deletion.CASCADE, related_name='mr_lv', to='sadmin.level', verbose_name='Level')),
                ('mr_sc_code', models.ForeignKey(help_text='The Class', on_delete=django.db.models.deletion.CASCADE, related_name='mr_sc', to='sadmin.schoolclass', verbose_name='School Class')),
                ('mr_jb_num', models.ForeignKey(blank=True, help_text='Name of the subject based fee', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mr_sb', to='sadmin.subjectbilling', verbose_name='Billing Head')),
            ],
            options={
                'verbose_name': 'Member Record',
                'ordering': ['mr_num'],
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('sy_code', models.CharField(help_text='User assigned code for the Subject', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('sb_ex_board', models.CharField(choices=[('1', 'Zim Sec'), ('2', 'Cambridge')], default='1', help_text='Examination Board', max_length=1, verbose_name='Exam Board')),
                ('sy_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, verbose_name='Type')),
                ('sy_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Description')),
                ('sy_eff_date', models.DateTimeField(blank=True, help_text='Effetive Date', null=True, verbose_name='Effetive Date')),
                ('sb_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sy_lv_code', models.ForeignKey(help_text='The Study Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('sy_sb_code', models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'ordering': ['sy_code'],
            },
        ),
        migrations.AddField(
            model_name='schemes',
            name='ch_sy_code',
            field=models.ForeignKey(help_text='The syllabus for subject of the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.syllabus', verbose_name='Syllabus'),
        ),
    ]
