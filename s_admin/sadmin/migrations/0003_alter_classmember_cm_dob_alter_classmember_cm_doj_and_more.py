# Generated by Django 5.1.2 on 2024-11-13 12:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sadmin', '0002_currency_alter_classmember_options_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='classmember',
            name='cm_dob',
            field=models.DateTimeField(help_text='Date of birth', verbose_name='Date Of Birth'),
        ),
        migrations.AlterField(
            model_name='classmember',
            name='cm_doj',
            field=models.DateTimeField(help_text='Date Joined', verbose_name='Date joined'),
        ),
        migrations.AlterField(
            model_name='classmember',
            name='cm_dol',
            field=models.DateTimeField(help_text='Date of leaving', verbose_name='Date of Leaving'),
        ),
        migrations.AlterField(
            model_name='staffmember',
            name='sf_dob',
            field=models.DateTimeField(help_text='Date of birth', verbose_name='Date Of Birth'),
        ),
        migrations.AlterField(
            model_name='staffmember',
            name='sf_doj',
            field=models.DateTimeField(help_text='Date Joined', verbose_name='Date joined'),
        ),
        migrations.AlterField(
            model_name='staffmember',
            name='sf_dol',
            field=models.DateTimeField(help_text='Date of leaving', verbose_name='Date of Leaving'),
        ),
        migrations.CreateModel(
            name='Schemes',
            fields=[
                ('ch_num', models.AutoField(help_text='Unique identifier for the scheme', primary_key=True, serialize=False, verbose_name='Number')),
                ('ch_ex_board', models.CharField(choices=[('1', 'Zim Sec'), ('2', 'Cambridge')], default='1', help_text='Examination Board', max_length=1, verbose_name='Exam Board')),
                ('ch_week', models.IntegerField(blank=True, help_text='Week covered', null=True, verbose_name='Week')),
                ('ch_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, verbose_name='Type')),
                ('ch_topic', models.CharField(help_text='The Topic covered', max_length=100, verbose_name='Topic')),
                ('ch_objectives', models.CharField(help_text='The objectives for the period', max_length=100, verbose_name='Objetives')),
                ('ch_competencies', models.CharField(help_text='The competencies to be acquired', max_length=100, verbose_name='Competencies')),
                ('ch_methods', models.CharField(help_text='The methods to be used', max_length=100, verbose_name='Methods')),
                ('ch_evaluation', models.CharField(help_text='The Evaluation', max_length=100, verbose_name='Evaluation')),
                ('ch_review1', models.CharField(help_text='The first reviewer', max_length=100, verbose_name='Review1')),
                ('ch_review2', models.CharField(help_text='The second reviewer', max_length=100, verbose_name='Review2')),
                ('ch_eff_date', models.DateTimeField(blank=True, help_text='Effetive Date', null=True, verbose_name='Effetive Date')),
                ('ch_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('ch_lc_num', models.ForeignKey(help_text='Level Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.levelclass', verbose_name='Level Class')),
                ('ch_lv_code', models.ForeignKey(help_text='The Study Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('ch_sb_code', models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
                ('ch_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
            ],
            options={
                'verbose_name': 'Schemes',
                'ordering': ['ch_num'],
            },
        ),
        migrations.CreateModel(
            name='DailyPlan',
            fields=[
                ('sp_num', models.AutoField(help_text='Unique identifier for the daily plan', primary_key=True, serialize=False, verbose_name='Number')),
                ('sp_day', models.IntegerField(blank=True, help_text='Day of the session', null=True, verbose_name='day')),
                ('sp_hrs', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Duration', max_digits=10, null=True, verbose_name='Req. Hrs')),
                ('sp_area', models.CharField(blank=True, choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, null=True, verbose_name='Type')),
                ('sp_topic', models.CharField(blank=True, help_text='The Topic covered', max_length=100, null=True, verbose_name='Topic')),
                ('sp_objective', models.CharField(help_text='The objectives for the period', max_length=100, verbose_name='Objetives')),
                ('sp_absorption', models.CharField(help_text='The methods to be used', max_length=100, verbose_name='Methods')),
                ('sp_paction', models.IntegerField(choices=[(80, 'more than 80 %'), (75, '75 %'), (50, '50 %'), (25, 'Less than 25 %')], help_text='Follow on action post delivery', verbose_name='Post Action')),
                ('sp_top', models.CharField(blank=True, help_text='Upper Group Members', max_length=100, null=True, verbose_name='Top Group')),
                ('sp_middle', models.CharField(blank=True, help_text='Normal Group Members', max_length=100, null=True, verbose_name='Normal Group')),
                ('sp_lower', models.CharField(blank=True, help_text='Lower Group Members', max_length=100, null=True, verbose_name='Lower Group')),
                ('sp_del_date', models.DateTimeField(blank=True, help_text='Date of execution of lesson', null=True, verbose_name='Delivery Date')),
                ('sp_plan_date', models.DateTimeField(blank=True, help_text='Planned date of execution of lesson', null=True, verbose_name='Planned Date')),
                ('sp_status', models.CharField(choices=[('0', 'Planned'), ('1', 'Delivered'), ('2', 'Deferred')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sp_lc_num', models.ForeignKey(help_text='Level Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.levelclass', verbose_name='Level Class')),
                ('sp_sb_code', models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
                ('sp_sc_code', models.ForeignKey(help_text='Foreign key to School Class', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schoolclass', verbose_name='School Class')),
                ('sp_ch_num', models.ForeignKey(help_text='Scheme Plan', on_delete=django.db.models.deletion.CASCADE, to='sadmin.schemes', verbose_name='Scheme')),
            ],
            options={
                'verbose_name': 'DailyPlan',
                'ordering': ['sp_num'],
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('sy_code', models.CharField(help_text='User assigned code for the Subject', max_length=10, primary_key=True, serialize=False, verbose_name='Code')),
                ('sb_ex_board', models.CharField(choices=[('1', 'Zim Sec'), ('2', 'Cambridge')], default='1', help_text='Examination Board', max_length=1, verbose_name='Exam Board')),
                ('sy_type', models.CharField(choices=[('1', 'Academic'), ('2', 'Sport'), ('3', 'Extra Curricular')], help_text='Type of the Syllabus', max_length=1, verbose_name='Type')),
                ('sy_desc', models.CharField(help_text='The description of the Subject', max_length=100, verbose_name='Description')),
                ('sy_eff_date', models.DateTimeField(blank=True, help_text='Effetive Date', null=True, verbose_name='Effetive Date')),
                ('sb_status', models.CharField(choices=[('1', 'On'), ('2', 'Off')], default='1', help_text='Status', max_length=1, verbose_name='Status')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('sy_lv_code', models.ForeignKey(help_text='The Study Level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.level', verbose_name='Level')),
                ('sy_sb_code', models.ForeignKey(help_text='The subject for the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'ordering': ['sy_code'],
            },
        ),
        migrations.AddField(
            model_name='schemes',
            name='ch_sy_code',
            field=models.ForeignKey(help_text='The syllabus for subject of the study level', on_delete=django.db.models.deletion.CASCADE, to='sadmin.syllabus', verbose_name='Syllabus'),
        ),
    ]
